{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "3ad0e9fa-464e-4738-b932-ddcfce85a4b3": {
        "id": "3ad0e9fa-464e-4738-b932-ddcfce85a4b3",
        "parent": null,
        "name": "ll",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "d2f006b9-a22b-476e-99bc-c79741d29dc2",
          "13d77e3b-26a6-4f01-9296-1b90f04e65eb"
        ],
        "isRemovable": false,
        "filePath": "ll"
      },
      "d2f006b9-a22b-476e-99bc-c79741d29dc2": {
        "id": "d2f006b9-a22b-476e-99bc-c79741d29dc2",
        "parent": "3ad0e9fa-464e-4738-b932-ddcfce85a4b3",
        "name": "function.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "ll/function.js",
        "code": "let SL_REDIS = require('slappforge-sdk-redis');\nlet clusterManager = require('./ClusterManager');\nconst redis = new SL_REDIS.Redis(clusterManager);\n\nexports.handler = function (request, response) {\n    // You must always quit the redis client after it's used\n    redis.get({\n        redisClient: 'test',\n        params: ['k1']\n    }, function (error, response, redisClient) {\n        if (error) {\n            callback(error);\n            console.log(error);\n        } else {\n            redisClient.quit();\n        }\n    });\n\n    response.send({ \"message\": \"Successfully executed\" });\n}",
        "config": {
          "runtime": "nodejs8",
          "timeout": 60,
          "memory": 128,
          "triggerType": 0
        },
        "triggers": [
          {
            "resourceName": "http-trigger",
            "config": {}
          }
        ]
      },
      "67229092-b624-4317-a6e0-658042b9e917": {
        "id": "67229092-b624-4317-a6e0-658042b9e917",
        "parent": null,
        "name": "index.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": false,
        "filePath": "index.js",
        "code": "// This file is used to register all your cloud functions in GCP.\n// DO NOT EDIT/DELETE THIS, UNLESS YOU KNOW WHAT YOU ARE DOING.\n\nexports.llfunction = require(\"./ll/function.js\").handler;"
      },
      "13d77e3b-26a6-4f01-9296-1b90f04e65eb": {
        "id": "13d77e3b-26a6-4f01-9296-1b90f04e65eb",
        "parent": "3ad0e9fa-464e-4738-b932-ddcfce85a4b3",
        "name": "ClusterManager.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "ll/ClusterManager.js",
        "code": "module.exports = function() {\n    this.clusters = [];\n\n    this.clusters[\"\"] = {\n        host: process.env.EndPoint_redis,\n        port: 6379,\n        clusterModeEnabled: false\n    };\n};"
      }
    },
    "deletedFiles": [],
    "rootNode": "3ad0e9fa-464e-4738-b932-ddcfce85a4b3",
    "openFiles": [
      "d2f006b9-a22b-476e-99bc-c79741d29dc2"
    ],
    "currentFileId": "d2f006b9-a22b-476e-99bc-c79741d29dc2",
    "resources": {
      "http-trigger": {
        "name": "http-trigger",
        "type": "http-trigger",
        "config": {}
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "AWS_REGION",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "slappforge-sdk-redis": {
          "name": "slappforge-sdk-redis",
          "language": "javascript",
          "version": "0.0.3",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "ll",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east1",
    "platform": "GCP",
    "platformRegions": {
      "AWS": "us-east-1"
    },
    "lastSave": 1562151719451
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "ll",
      "url": "https://github.com/Kumudikatest/ll"
    }
  }
}